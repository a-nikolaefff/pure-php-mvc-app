version: '3'
services:

  #Nginx Server
  nginx:
    image: nginx
    volumes:
      - ./public:/var/www/public
      - ./docker/nginx/config/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "${HTTP_PORT}:80"
      - "${HTTPS_PORT}:443"
    depends_on:
      - php

  #PHP
  php:
    build:
      context: docker/php
      args:
        - UID=${LOCAL_UID:-1000}
        - GID=${LOCAL_GID:-1000}
    env_file:
      - .env
    volumes:
      - ./public:/var/www/public
      - ./src:/var/www/src
      - ./vendor:/var/www/vendor
      - ./composer.json:/var/www/composer.json
      - ./composer.lock:/var/www/composer.lock
      - ./docker/php/config/php.ini:/usr/local/etc/php/conf.d/php.ini
      - ./docker/php/config/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
    depends_on:
      pgsql:
        condition: service_healthy

  #PostgreSQL
  pgsql:
    build:
      context: docker/postgresql
      args:
        - UID=${LOCAL_UID:-1000}
        - GID=${LOCAL_GID:-1000}
    ports:
      - "${PGSQL_PORT}:5432"
    volumes:
      - ./databases/postgresql/data:/var/lib/postgresql/data
      - ./databases/postgresql/scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRES_USER: "${PGSQL_USER}"
      POSTGRES_PASSWORD: "${PGSQL_PASSWORD}"
      POSTGRES_DB: "${PGSQL_DB}"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 5s
      timeout: 5s
      retries: 10
